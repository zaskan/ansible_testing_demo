---
- name: Push collection to automation hub
  gather_facts: true
  hosts: localhost
  tasks:
    - name: Get current date
      ansible.builtin.set_fact:
        operation_time: "{{ ansible_date_time.iso8601_basic_short }}"
  
    - name: Clone Configuration Repository
      ansible.builtin.include_role:
        name: demos.utils.git
      vars:
        git_repository: "{{ repository }}"
        git_directory: "/tmp/{{ operation_time }}"
        git_operation: clone
      register: git_result

    - name: Read galaxy.yml file
      ansible.builtin.slurp:
        src: "$(params.PROJECT_ROOT)/$(params.COLLECTION_PATH)/galaxy.yml"
      register: galaxy_yml

    - name: Parse galaxy.yml content
      ansible.builtin.set_fact:
        galaxy_content: "{{ galaxy_yml.content | b64decode | from_yaml }}"

    - name: Set extracted variables
      ansible.builtin.set_fact:
        namespace: "{{ galaxy_content.namespace | regex_replace('[^A-Za-z0-9_]', '') }}"
        collection: "{{ galaxy_content.name | regex_replace('[^A-Za-z0-9_]', '') }}"
        version: "{{ galaxy_content.version | regex_replace('[^A-Za-z0-9_.]', '') }}"

    - name: Create Namespace
      ansible.hub.ah_namespace:
        name: "{{ namespace }}"
        company: Redhat
        email: ansible@redhat.com
        description: "This is the test Namespace"
        links:
          - name: "homepage"
            url: "https://www.redhat.com"
        validate_certs: false

    - name: Build Collection Artifact
      ansible.hub.ah_build:
        path: "/tmp/{{ operation_time }}"
        force: true
        output_path: "/tmp"
      register: artifact

    - name: Upload collection to automation hub
      ansible.hub.ah_collection_upload:
        path: "{{ artifact.path }}"
        validate_certs: false

    - name: Approve collection
      ansible.hub.ah_approval:
        namespace: "{{ namespace }}"
        name: "{{ collection }}"
        version: "{{ version }}"
        validate_certs: false
        request_timeout: 10
        
      register: output
